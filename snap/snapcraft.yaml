name: spark
version: '1.2.0'
summary: Apache Spark
description: |
  Apache Spark is a fast and general engine for large-scale data processing.

  This snap installs Spark 2.1.1 and is compatible with Apache Bigtop 1.2.0.
grade: devel # must be 'stable' to release into candidate/stable channels
confinement: strict

apps:
  spark-class:
    command: wrappers/spark-class
    plugs:
      - 'network'
      - 'network-bind'
  spark-shell:
    command: wrappers/spark-shell
    plugs:
      - 'network'
      - 'network-bind'
  spark-sql:
    command: wrappers/spark-sql
    plugs:
      - 'network'
      - 'network-bind'
  spark-submit:
    command: wrappers/spark-submit
    plugs:
      - 'network'
      - 'network-bind'
  find-spark-home:
    command: wrappers/find-spark-home
  pyspark:
    command: wrappers/pyspark
    plugs:
      - 'network'
      - 'network-bind'
  run-example:
    command: wrappers/run-example
    plugs:
      - 'network'
      - 'network-bind'
  spark-daemon-wrapper:
    command: wrappers/spark-daemon-wrapper.sh
    plugs:
      - 'network'
      - 'network-bind'

plugs:
  home:
    interface: home
  hadoop:
    interface: content
    content: hadoop
    target: $SNAP/hadoop
  hadoop-conf:
    interface: content
    content: hadoop-conf
    target: $SNAP_DATA/etc/hadoop
  zookeeper:
    interface: content
    content: zookeeper
    target: $SNAP/zookeeper

parts:
  bigtop:
    source: https://github.com/apache/bigtop.git
    source-type: git
    source-branch: branch-1.2
    plugin: gradle
    gradle-options: ['-b', 'packages.gradle', 'bom-snap']
    build-packages:
      - curl
      - puppet-common
    stage-packages:
      - default-jdk-headless
    prepare: |
      # get bigtop buildreqs on the system
      if [ `id -u` -ne 0 ]; then
        PUPPET_CMD='sudo -E puppet apply'
      else
        PUPPET_CMD='puppet apply'
      fi
      ${PUPPET_CMD} -d --parser future --modulepath=".:/etc/puppet/modules" \
        -e "include bigtop_toolchain::protobuf"
      ${PUPPET_CMD} -d --parser future --modulepath=".:/etc/puppet/modules" \
        -e "include bigtop_toolchain::packages"

      # add a gradle task to generate a sourceable bom for use by other parts
      echo 'task "bom-snap" () << {' >> packages.gradle
      echo '  def bomWriter = new File("bigtop-snap.bom").newWriter()' >> packages.gradle
      echo '  bomVersions.each { bomWriter << "$it\\n"}' >> packages.gradle
      echo '  bomWriter.close()' >> packages.gradle
      echo '}' >> packages.gradle

      # there is no 'build' for bigtop-utils source, just set perms
      chmod 755 bigtop-packages/src/common/bigtop-utils/bigtop-detect-*

      # make sure utils point to the right default directory
      for i in `ls bigtop-packages/src/common/bigtop-utils/bigtop-*`; do
        sed -e 's|/etc/default|${SNAP}/etc/default|' -i $i; done

      # point bigtop-utils to SNAP_DATA for additional classpath entries
      echo 'export BIGTOP_CLASSPATH=${SNAP_DATA}/var/lib/bigtop' >> \
        bigtop-packages/src/common/bigtop-utils/bigtop-utils.default

      # set bigtop-utils java home to the jdk packed into the snap
      echo 'export JAVA_HOME=${SNAP}/usr/lib/jvm/default-java' >> \
        bigtop-packages/src/common/bigtop-utils/bigtop-utils.default
    install: |
      # adapted from bigtop/bigtop-packages/src/deb/bigtop-utils/rules
      install -d -p -m 755 $SNAPCRAFT_PART_INSTALL/usr/lib/bigtop-utils/
      install -p -m 755 bigtop-packages/src/common/bigtop-utils/bigtop-detect-javahome \
        $SNAPCRAFT_PART_INSTALL/usr/lib/bigtop-utils/
      install -p -m 755 bigtop-packages/src/common/bigtop-utils/bigtop-detect-javalibs \
        $SNAPCRAFT_PART_INSTALL/usr/lib/bigtop-utils/
      install -p -m 755 bigtop-packages/src/common/bigtop-utils/bigtop-detect-classpath \
        $SNAPCRAFT_PART_INSTALL/usr/lib/bigtop-utils/
      install -p -m 755 bigtop-packages/src/common/bigtop-utils/bigtop-monitor-service \
        $SNAPCRAFT_PART_INSTALL/usr/lib/bigtop-utils/
      install -d -p -m 755 $SNAPCRAFT_PART_INSTALL/bigtop-utils/etc/default
      install -p -m 644 bigtop-packages/src/common/bigtop-utils/bigtop-utils.default \
        $SNAPCRAFT_PART_INSTALL/etc/default/bigtop-utils
    stage:
      - etc/*
      - usr/lib/*
  bigtop-groovy:
    after:
      - bigtop
    source: https://dl.bintray.com/groovy/maven/apache-groovy-binary-2.4.10.zip
    plugin: dump
    prepare: |
      cp ../../bigtop/build/bigtop-snap.bom \
        ../../bigtop/build/bigtop-packages/src/common/bigtop-groovy/bigtop.bom
      chmod 755 ../../bigtop/build/bigtop-packages/src/common/bigtop-groovy/do-component-build
      chmod 755 ../../bigtop/build/bigtop-packages/src/common/bigtop-groovy/install_groovy.sh
    build: |
      ../../bigtop/build/bigtop-packages/src/common/bigtop-groovy/do-component-build
    install: |
      # adapted from bigtop/bigtop-packages/src/deb/bigtop-groovy/rules
      ../../bigtop/build/bigtop-packages/src/common/bigtop-groovy/install_groovy.sh \
        --build-dir=groovy-2.4.10 \
        --prefix=$SNAPCRAFT_PART_INSTALL \
        --bin-dir=usr/lib/bigtop-groovy/bin \
        --version=2.4.10 \
        --lib-dir=usr/lib/bigtop-groovy/lib \
        --conf-dir=usr/lib/bigtop-groovy/conf
    stage:
      - usr/lib/*
  bigtop-jsvc:
    after:
      - bigtop
    source: https://archive.apache.org/dist/commons/daemon/source/commons-daemon-1.0.15-native-src.tar.gz
    plugin: autotools
    prepare: |
      cp ../../bigtop/build/bigtop-snap.bom \
        ../../bigtop/build/bigtop-packages/src/common/bigtop-jsvc/bigtop.bom
      chmod 755 ../../bigtop/build/bigtop-packages/src/common/bigtop-jsvc/do-component-build
      chmod 755 ../../bigtop/build/bigtop-packages/src/common/bigtop-jsvc/install_jsvc.sh

      # patch jsvc sources with bigtop-specific changes
      for i in `ls ../../bigtop/build/bigtop-packages/src/common/bigtop-jsvc/patch*.diff`; do \
        patch -p1 -i $i; done
    build: |
      # the autotools plugin ensures we get the right build tools, but we \
      # still want to use the bigtop build recipe.
      bash -c '. ../../bigtop/build/bigtop-packages/src/common/bigtop-utils/bigtop-detect-javahome && \
        ../../bigtop/build/bigtop-packages/src/common/bigtop-jsvc/do-component-build'
    install: |
      # adapted from bigtop/bigtop-packages/src/deb/bigtop-jsvc/rules
      ../../bigtop/build/bigtop-packages/src/common/bigtop-jsvc/install_jsvc.sh \
        --build-dir=. \
        --prefix=$SNAPCRAFT_PART_INSTALL
    stage:
      - usr/lib/*
      - usr/share/*
  spark:
    after:
      - bigtop-groovy
      - bigtop-jsvc
    source: https://s3.amazonaws.com/jujubigdata/apache/noarch/spark-2.1.1.tar.gz
    plugin: maven
    maven-options:
      # We need the maven plugin to setup our env, but dont actually care about
      # the packaged build. Build as fast as we can, leaving the real build for
      # the install phase.
      - -DskipTests
      - -Phadoop-provided
      - -Dprotobuf.version=2.5.0
      - -Dhadoop.version=2.7.3
      - -Dyarn.version=2.7.3
    stage-packages:
      - coreutils
    prepare: |
      cp ../../bigtop/build/bigtop-snap.bom \
        ../../bigtop/build/bigtop-packages/src/common/spark/bigtop.bom
      chmod 755 ../../bigtop/build/bigtop-packages/src/common/spark/do-component-build
      chmod 755 ../../bigtop/build/bigtop-packages/src/common/spark/install_spark.sh

      # patch bigtop sources with snap-specific changes for spark
      for i in `ls ../../../snap/sources/patch*.diff`; do \
        patch -d ../../bigtop/build -p1 -i $i; done

      # patch spark sources with bigtop-specific changes
      for i in `ls ../../bigtop/build/bigtop-packages/src/common/spark/patch*.diff`; do \
        patch -p1 -i $i; done

      # adapted from bigtop/bigtop-packages/src/common/spark/do-component-build
      sed -e '/useZincServer/d' -e '/recompileMode/d' -i pom.xml

      # needed to build with java8
      export MAVEN_OPTS="-Xmx2g -XX:ReservedCodeCacheSize=512m"

      # we always want spark to connect/use the hadoop snap; set opt so we dont
      # build hadoop jars into our assembly
      export SPARK_BUILD_OPTS=-Phadoop-provided
    install: |
      # Do not define build tasks because we want the maven plugin to setup any
      # proxy config (otherwise, we'd have to grok the env and do it ourselves).
      # We still want to use the bigtop build recipe for the actual build, so
      # do it first thing during install.
      # NB: exit 1 on failure since install step failures do not stop the build
      ../../bigtop/build/bigtop-packages/src/common/spark/do-component-build || exit 1

      # adapted from bigtop/bigtop-packages/src/deb/spark/rules
      ../../bigtop/build/bigtop-packages/src/common/spark/install_spark.sh \
        --build-dir=. \
        --doc-dir=/usr/share/doc/spark \
        --source-dir=../../bigtop/build/bigtop-packages/src/common/spark \
        --prefix=$SNAPCRAFT_PART_INSTALL

      # FIXME: hack a $SNAP_DATA symlink since we cant use $SNAP_DATA during build
      rm -f $SNAPCRAFT_PART_INSTALL/usr/lib/spark/conf
      ln -s /var/snap/spark/current/etc/spark/conf $SNAPCRAFT_PART_INSTALL/usr/lib/spark/conf
      rm -f $SNAPCRAFT_PART_INSTALL/usr/lib/spark/work
      ln -s /var/snap/spark/common/var/run/spark/work $SNAPCRAFT_PART_INSTALL/usr/lib/spark/work

      # create dirs for potential slot contents
      install -d -m 0755 $SNAPCRAFT_PART_INSTALL/hadoop
      install -d -m 0755 $SNAPCRAFT_PART_INSTALL/zookeeper
    stage:
      - etc/spark
      - hadoop
      - usr/bin
      - usr/lib/spark
      - zookeeper
  wrappers:
    after:
      - spark
    source: snap/
    plugin: dump
    stage:
      - wrappers/*
